block = "System"

[commands]
sys.ps.states = "ps -axo state=\
 | awk  'BEGIN {FS=null} {print $1}'\
 | sort\
 | uniq -c\
 | awk '\
  /D/ {print \"S_ps_uint\", $1}\
  /I/ {print \"S_ps_idle\", $1}\
  /L/ {print \"S_ps_lock\", $1}\
  /R/ {print \"S_ps_rnbl\", $1}\
  /S/ {print \"S_ps_slpn\", $1}\
  /T/ {print \"S_ps_stpd\", $1}\
  /W/ {print \"S_ps_intr\", $1}\
  /Z/ {print \"S_ps_zmbe\", $1}\
 '"
; use double quotes since backticks must be parsed
sys.sysctl.stats = "sysctl\
 kern.boottime\
 kern.clockrate\
 kern.cp_time\
 hw.ncpu\
 vfs.bufspace\
 vm.stats.vm.v_active_count\
 vm.stats.vm.v_cache_count\
 vm.stats.vm.v_free_count\
 vm.stats.vm.v_inactive_count\
 vm.stats.vm.v_page_count\
 vm.stats.vm.v_page_size\
 vm.stats.vm.v_swappgsin\
 vm.stats.vm.v_swappgsout\
 vm.stats.vm.v_wire_count\
 | awk \"\
  /hw\\.ncpu/ {print \\\"S_hw_ncpu\\\", \\$2}\
  /kern\\.boottime/ {print \\\"S_uptime_days\\\", (`date +%s` - \\$5) / 86400}\
  /kern\\.clockrate/ {print \\\"S_k_clockrate\\\", \\$14}\
  /kern\\.cp_time/ {\
    print \\\"S_k_cp_user\\\", \\$2;\
    print \\\"S_k_cp_nice\\\", \\$3;\
    print \\\"S_k_cp_sys\\\", \\$4;\
    print \\\"S_k_cp_intr\\\", \\$5;\
    print \\\"S_k_cp_idle\\\", \\$6;\
  }\
  /vfs\\.bufspace/ {print \\\"S_vfs_bufspace\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_active_count/ {print \\\"S_v_active_count\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_cache_count/ {print \\\"S_v_cache_count\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_free_count/ {print \\\"S_v_free_count\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_inactive_count/ {print \\\"S_v_inactive_count\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_page_count/ {print \\\"S_v_page_count\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_page_size/ {print \\\"S_v_page_size\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_swappgsin/ {print \\\"S_v_swappgsin\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_swappgsout/ {print \\\"S_v_swappgsout\\\", \\$2}\
  /vm\\.stats\\.vm\\.v_wire_count/ {print \\\"S_v_wire_count\\\", \\$2}\
 \""

sys.who = "who\
 | awk '\
  BEGIN {tty=0; pty=0; pts=0; other=0;}\
  {if(match($2, /tty/))tty++; else if(match($2, /pty/))pty++; else if(match($2, /pts/))pts++; else other++;}\
  END {\
    print \"S_who_tty\", tty;\
    print \"S_who_pty\", pty;\
    print \"S_who_pts\", pts;\
    print \"S_who_oth\", other;\
  }'"
